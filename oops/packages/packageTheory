Packages in Java are a mechanism that encapsulates a group of classes, sub-packages, and interfaces. Packages are used for:

1. Prevent naming conflicts by allowing classes with the same name to exist in different packages, like college.staff.cse.Employee and college.staff.ee.Employee.
2. They make it easier to organize, locate, and use classes, interfaces, and other components.
3. Packages also provide controlled access for Protected members that are accessible within the same package and by subclasses.
4. Also for default members (no access specifier) that are accessible only within the same package.

By grouping related classes into packages, Java promotes data encapsulation, making code reusable and easier to manage. Simply import the desired class from a package to use it in your program.

 -----------------------------xxxxx-------------------------------

Directory Structure: Package names and directory structures are closely related. For example, if a package name is college.staff.cse, then three directories are, college, staff, and cse, where cse is inside staff, and staff is inside the college.

Example: import java.util.*; // Here, util is a sub-package created inside the java package.  


 we can import classes from a package using either of the following methods:

1. Import a specific class:

import java.util.Vector; 


This imports only the Vector class from the java.util package.

2. Import all classes from a package:

import java.util.*; 
 -----------------------------xxxxx-------------------------------
Types of Java Packages:
Built-in Packages
User-defined Packages

 -----------------------------xxxxx-------------------------------

1. Built-in Packages
These packages consist of a large number of classes which are a part of Java API.Some of the commonly used built-in packages are:

1. java.lang: Contains language support classes(e.g classes which defines primitive data types, math operations). This package is automatically imported.
2. java.io: Contains classes for supporting input / output operations.
3. java.util: Contains utility classes which implement data structures like Linked List, Dictionary and support ; for Date / Time operations.
4. java.applet: Contains classes for creating Applets.
5. java.awt: Contain classes for implementing the components for graphical user interfaces (like button , ;menus etc). 
6. java.net: Contain classes for supporting networking operations.
